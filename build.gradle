plugins {
  id "eclipse"
  id "idea"
  id "org.openjfx.javafxplugin" version "0.0.9" apply false
}

subprojects {
  apply plugin: 'java-library'

  version = "1.1.1"

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    implementation 'info.picocli:picocli:4.5.2'
    implementation 'org.fastily:wp-toolbox:0.0.3'
  }

  java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }
}


project(':mtc-cli') {
  dependencies {
    implementation project(':mtc-shared')
  }

  task doDist(type: Jar) {
    archiveClassifier = 'uber'

    archiveBaseName = "CMTC"

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
      configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    manifest {
      attributes 'Main-Class': 'mtc.CMTC'
    }

    exclude "META-INF/*.SF", "**/LICENSE*", "**/NOTICE*", "**/maven/**"
  }
}

project(':mtc-ui') {
  apply plugin: "org.openjfx.javafxplugin"

  dependencies {
    implementation project(':mtc-shared')
  }

  javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
  }
  
  task doDist(type: Jar) {
    archiveClassifier = 'uber'

    archiveBaseName = "MTC"

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
      configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    manifest {
      attributes 'Main-Class': 'mtc.App'
    }

    exclude "META-INF/*.SF", "**/LICENSE*", "**/NOTICE*", "**/maven/**"
  }
}

wrapper {
  gradleVersion = '6.7'
}